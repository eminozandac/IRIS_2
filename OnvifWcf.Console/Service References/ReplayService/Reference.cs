//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnvifWcf.Console.ReplayService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.onvif.org/ver10/replay/wsdl", ConfigurationName="ReplayService.ReplayPort")]
    public interface ReplayPort {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Capabilities")]
        OnvifWcf.Console.ReplayService.Capabilities GetServiceCapabilities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Capabilities")]
        System.Threading.Tasks.Task<OnvifWcf.Console.ReplayService.Capabilities> GetServiceCapabilitiesAsync();
        
        // CODEGEN: Parameter 'Uri' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/replay/wsdl/GetReplayUri", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Uri")]
        OnvifWcf.Console.ReplayService.GetReplayUriResponse GetReplayUri(OnvifWcf.Console.ReplayService.GetReplayUriRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/replay/wsdl/GetReplayUri", ReplyAction="*")]
        System.Threading.Tasks.Task<OnvifWcf.Console.ReplayService.GetReplayUriResponse> GetReplayUriAsync(OnvifWcf.Console.ReplayService.GetReplayUriRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Configuration")]
        OnvifWcf.Console.ReplayService.ReplayConfiguration GetReplayConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Configuration")]
        System.Threading.Tasks.Task<OnvifWcf.Console.ReplayService.ReplayConfiguration> GetReplayConfigurationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetReplayConfiguration(OnvifWcf.Console.ReplayService.ReplayConfiguration Configuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration", ReplyAction="*")]
        System.Threading.Tasks.Task SetReplayConfigurationAsync(OnvifWcf.Console.ReplayService.ReplayConfiguration Configuration);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/replay/wsdl")]
    public partial class Capabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private bool reversePlaybackField;
        
        private float[] sessionTimeoutRangeField;
        
        private bool rTP_RTSP_TCPField;
        
        private bool rTP_RTSP_TCPFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        public Capabilities() {
            this.reversePlaybackField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReversePlayback {
            get {
                return this.reversePlaybackField;
            }
            set {
                this.reversePlaybackField = value;
                this.RaisePropertyChanged("ReversePlayback");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float[] SessionTimeoutRange {
            get {
                return this.sessionTimeoutRangeField;
            }
            set {
                this.sessionTimeoutRangeField = value;
                this.RaisePropertyChanged("SessionTimeoutRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool RTP_RTSP_TCP {
            get {
                return this.rTP_RTSP_TCPField;
            }
            set {
                this.rTP_RTSP_TCPField = value;
                this.RaisePropertyChanged("RTP_RTSP_TCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RTP_RTSP_TCPSpecified {
            get {
                return this.rTP_RTSP_TCPFieldSpecified;
            }
            set {
                this.rTP_RTSP_TCPFieldSpecified = value;
                this.RaisePropertyChanged("RTP_RTSP_TCPSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ReplayConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sessionTimeoutField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=0)]
        public string SessionTimeout {
            get {
                return this.sessionTimeoutField;
            }
            set {
                this.sessionTimeoutField = value;
                this.RaisePropertyChanged("SessionTimeout");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Transport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TransportProtocol protocolField;
        
        private Transport tunnelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public TransportProtocol Protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
                this.RaisePropertyChanged("Protocol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Transport Tunnel {
            get {
                return this.tunnelField;
            }
            set {
                this.tunnelField = value;
                this.RaisePropertyChanged("Tunnel");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum TransportProtocol {
        
        /// <remarks/>
        UDP,
        
        /// <remarks/>
        TCP,
        
        /// <remarks/>
        RTSP,
        
        /// <remarks/>
        HTTP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class StreamSetup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private StreamType streamField;
        
        private Transport transportField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public StreamType Stream {
            get {
                return this.streamField;
            }
            set {
                this.streamField = value;
                this.RaisePropertyChanged("Stream");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Transport Transport {
            get {
                return this.transportField;
            }
            set {
                this.transportField = value;
                this.RaisePropertyChanged("Transport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum StreamType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("RTP-Unicast")]
        RTPUnicast,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("RTP-Multicast")]
        RTPMulticast,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReplayUri", WrapperNamespace="http://www.onvif.org/ver10/replay/wsdl", IsWrapped=true)]
    public partial class GetReplayUriRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/replay/wsdl", Order=0)]
        public OnvifWcf.Console.ReplayService.StreamSetup StreamSetup;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/replay/wsdl", Order=1)]
        public string RecordingToken;
        
        public GetReplayUriRequest() {
        }
        
        public GetReplayUriRequest(OnvifWcf.Console.ReplayService.StreamSetup StreamSetup, string RecordingToken) {
            this.StreamSetup = StreamSetup;
            this.RecordingToken = RecordingToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReplayUriResponse", WrapperNamespace="http://www.onvif.org/ver10/replay/wsdl", IsWrapped=true)]
    public partial class GetReplayUriResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/replay/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string Uri;
        
        public GetReplayUriResponse() {
        }
        
        public GetReplayUriResponse(string Uri) {
            this.Uri = Uri;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReplayPortChannel : OnvifWcf.Console.ReplayService.ReplayPort, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReplayPortClient : System.ServiceModel.ClientBase<OnvifWcf.Console.ReplayService.ReplayPort>, OnvifWcf.Console.ReplayService.ReplayPort {
        
        public ReplayPortClient() {
        }
        
        public ReplayPortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReplayPortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReplayPortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReplayPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OnvifWcf.Console.ReplayService.Capabilities GetServiceCapabilities() {
            return base.Channel.GetServiceCapabilities();
        }
        
        public System.Threading.Tasks.Task<OnvifWcf.Console.ReplayService.Capabilities> GetServiceCapabilitiesAsync() {
            return base.Channel.GetServiceCapabilitiesAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OnvifWcf.Console.ReplayService.GetReplayUriResponse OnvifWcf.Console.ReplayService.ReplayPort.GetReplayUri(OnvifWcf.Console.ReplayService.GetReplayUriRequest request) {
            return base.Channel.GetReplayUri(request);
        }
        
        public string GetReplayUri(OnvifWcf.Console.ReplayService.StreamSetup StreamSetup, string RecordingToken) {
            OnvifWcf.Console.ReplayService.GetReplayUriRequest inValue = new OnvifWcf.Console.ReplayService.GetReplayUriRequest();
            inValue.StreamSetup = StreamSetup;
            inValue.RecordingToken = RecordingToken;
            OnvifWcf.Console.ReplayService.GetReplayUriResponse retVal = ((OnvifWcf.Console.ReplayService.ReplayPort)(this)).GetReplayUri(inValue);
            return retVal.Uri;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OnvifWcf.Console.ReplayService.GetReplayUriResponse> OnvifWcf.Console.ReplayService.ReplayPort.GetReplayUriAsync(OnvifWcf.Console.ReplayService.GetReplayUriRequest request) {
            return base.Channel.GetReplayUriAsync(request);
        }
        
        public System.Threading.Tasks.Task<OnvifWcf.Console.ReplayService.GetReplayUriResponse> GetReplayUriAsync(OnvifWcf.Console.ReplayService.StreamSetup StreamSetup, string RecordingToken) {
            OnvifWcf.Console.ReplayService.GetReplayUriRequest inValue = new OnvifWcf.Console.ReplayService.GetReplayUriRequest();
            inValue.StreamSetup = StreamSetup;
            inValue.RecordingToken = RecordingToken;
            return ((OnvifWcf.Console.ReplayService.ReplayPort)(this)).GetReplayUriAsync(inValue);
        }
        
        public OnvifWcf.Console.ReplayService.ReplayConfiguration GetReplayConfiguration() {
            return base.Channel.GetReplayConfiguration();
        }
        
        public System.Threading.Tasks.Task<OnvifWcf.Console.ReplayService.ReplayConfiguration> GetReplayConfigurationAsync() {
            return base.Channel.GetReplayConfigurationAsync();
        }
        
        public void SetReplayConfiguration(OnvifWcf.Console.ReplayService.ReplayConfiguration Configuration) {
            base.Channel.SetReplayConfiguration(Configuration);
        }
        
        public System.Threading.Tasks.Task SetReplayConfigurationAsync(OnvifWcf.Console.ReplayService.ReplayConfiguration Configuration) {
            return base.Channel.SetReplayConfigurationAsync(Configuration);
        }
    }
}
